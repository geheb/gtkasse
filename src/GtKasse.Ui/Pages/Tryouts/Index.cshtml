@page
@model GtKasse.Ui.Pages.Tryouts.IndexModel
@{
    ViewData["Title"] = Model.GetNode().Title;
    ViewData["HasFooter"] = true;
    Model.BuildHeaderMenu();

    var createUrl = Url.PageLink("CreateTryout");
    var dateConverter = new GermanDateTimeConverter();
}

@await Html.PartialAsync("_Header")

<section class="section">
    <div class="container">

        <div class="columns is-gapless is-mobile">
            <div class="column is-flex is-align-items-center">@Html.CreateBreadcrumb()</div>
            <div class="column is-narrow">
                <div class="dropdown is-hoverable is-right">
                    <div class="dropdown-trigger">
                        <button class="button" aria-haspopup="true" aria-controls="user-action">
                            <span class="icon is-small">
                                <i class="fa-solid fa-ellipsis-vertical"></i>
                            </span>
                        </button>
                    </div>
                    <div class="dropdown-menu" id="user-action" role="menu">
                        <div class="dropdown-content">
                            <a href="@createUrl" class="dropdown-item">
                                @(Model.GetNode<CreateTryoutModel>().Title)
                            </a>
                            <hr class="dropdown-divider" />
                            <a href="@Url.PageLink(string.Empty)" class="dropdown-item">
                                Geplante anzeigen
                            </a>
                            <a href="@Url.PageLink(string.Empty, values: new { filter = 1 })" class="dropdown-item">
                                Abgelaufene anzeigen
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div>
            <a href="@createUrl" class="button is-floating is-link">
                <i class="fas fa-calendar-plus"></i>
            </a>
        </div>

        <div class="list has-hoverable-list-items has-visible-pointer-controls">
            @if (Model.Items.Length < 1)
            {
                <div class="list-item">Keine Trainings vorhanden.</div>
            }
            @foreach (var i in Model.Items)
            {
                <div class="list-item">
                    <div class="list-item-image">
                        <i class="fa-solid fa-handshake fa-2x @(i.IsExpired ? string.Empty : "has-text-info")"></i>
                    </div>
                    <div class="list-item-content">
                        <div class="list-item-title">@i.Type (@dateConverter.ToDateTime(i.Date))</div>
                        <div class="list-item-description">
                            <span class="tag is-rounded">@i.BookingCount / @i.MaxBookings</span>
                            @if (i.ContactEmail is not null)
                            {
                                <span class="tag is-rounded is-warning"><a href="mailto:@i.ContactEmail">@i.ContactName</a></span>
                            }
                            else
                            {
                                <span class="tag is-rounded is-warning">@i.ContactName</span>
                            }

                        </div>
                    </div>
                    <div class="list-item-controls">
                        <div class="buttons">
                            @if (i.BookingCount > 0)
                            {
                                <a class="button is-dark is-inverted" href="@(Url.PageLink("TryoutBookings", null, new { id = i.Id }))">
                                    <span class="icon"><i class="fas fa-book"></i></span>
                                </a>
                            }
                            <a class="button is-dark is-inverted" href="@(Url.PageLink("EditTryout", null, new { id = i.Id }))">
                                <span class="icon"><i class="fas fa-pencil-alt"></i></span>
                            </a>
                        </div>
                     </div>
                </div>
            }
        </div>

    </div>
</section>

@await Html.PartialAsync("_Footer")

