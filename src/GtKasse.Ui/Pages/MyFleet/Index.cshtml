@page
@using GtKasse.Core.User
@model GtKasse.Ui.Pages.MyFleet.IndexModel
@{
    ViewData["Title"] = Model.GetNode().Title;
    ViewData["HasFooter"] = true;

    var dateConverter = new GermanDateTimeConverter();
    var createUrl = Url.PageLink("CreateBooking");
}

@await Html.PartialAsync("_Header")

<section class="section">
    <div class="container">

        <div class="columns is-gapless is-mobile">
            <div class="column is-flex is-align-items-center">@Html.CreateBreadcrumb()</div>
            <div class="column is-narrow">
                <div class="dropdown is-hoverable is-right">
                    <div class="dropdown-trigger">
                        <button class="button" aria-haspopup="true" aria-controls="user-action">
                            <span class="icon is-small">
                                <i class="fa-solid fa-ellipsis-vertical"></i>
                            </span>
                        </button>
                    </div>
                    <div class="dropdown-menu" id="user-action" role="menu">
                        <div class="dropdown-content">
                            <a href="@createUrl" class="dropdown-item">
                                @(Model.GetNode<CreateBookingModel>().Title)
                            </a>
                            <hr class="dropdown-divider" />
                            <a href="@Url.PageLink(string.Empty)" class="dropdown-item">
                                Meine anzeigen
                            </a>
                            <a href="@Url.PageLink(string.Empty, values: new { filter = 1 })" class="dropdown-item">
                                Geplante anzeigen
                            </a>
                            <a href="@Url.PageLink(string.Empty, values: new { filter = 2 })" class="dropdown-item">
                                Abgelaufene anzeigen
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div>
            <a href="@createUrl" class="button is-floating is-link">
                <i class="fas fa-calendar-plus"></i>
            </a>
        </div>

        <div class="list has-hoverable-list-items has-visible-pointer-controls">
            @if (Model.Items.Length < 1)
            {
                <div class="list-item">Keine Buchungen gefunden.&nbsp;<a href="@createUrl">Hier geht es zur Buchung</a>.</div>
            }
            @foreach (var i in Model.Items)
            {
                <div class="list-item">
                    <div class="list-item-image">
                        <i class="fa-solid fa-car-side fa-2x @(i.IsExpired ? string.Empty : "has-text-info")"></i>
                    </div>
                    <div class="list-item-content">
                        <div class="list-item-title">@dateConverter.Format(i.Start, i.End) - @i.Purpose</div>
                        <div class="list-item-description">
                            <span class="tag is-rounded">@i.VehicleName / @i.VehicleIdentifier</span>
                            @if (i.UserId != User.GetId())
                            {
                                @if (i.UserEmail is not null)
                                {
                                    <span class="tag is-rounded is-warning"><a href="mailto:@i.UserEmail">@i.User</a></span>
                                }
                                else
                                {
                                    <span class="tag is-rounded is-warning">@i.User</span>
                                }
                            }
                            @if (i.ConfirmedOn.HasValue)
                            {
                               <span class="tag is-rounded is-success">
                                   <span class="icon"><i class="fas fa-check"></i></span>
                               </span>
                            }
                            @if (i.CancelledOn.HasValue)
                            {
                               <span class="tag is-rounded is-danger">
                                   <span class="icon"><i class="fas fa-ban"></i></span>
                               </span> 
                            }
                        </div>
                    </div>
                    <div class="list-item-controls">
                        <div class="buttons">
                            @if (i.CanDelete && i.UserId == User.GetId())
                            {
                                <a class="button is-dark is-inverted click-deny" href="#" data-info="@dateConverter.Format(i.Start, i.End)" data-url="@(Url.PageLink(string.Empty, "delete", new { id = i.Id }))">
                                    <span class="icon"><i class="fas fa-trash-can"></i></span>
                                </a>
                            }
                        </div>
                     </div>
                </div>
            }
        </div>

    </div>
</section>

@await Html.PartialAsync("_Footer")

@section Scripts {
<script type="text/javascript">
    $(function () {

        $(".click-deny").click(function (e) {
            const url = $(this).data('url');
            const info = $(this).data('info');
            $.post(url, {@Html.AjaxCsrfToken()}).done(function () {
                createToast(`Buchung "${info}" wurde storniert.`, 'is-warning');
            }).always(function () {
                window.location.reload();
            });
        });

    });
</script>
}

