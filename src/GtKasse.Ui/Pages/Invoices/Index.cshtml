@page
@model GtKasse.Ui.Pages.Invoices.IndexModel
@{
    ViewData["Title"] = Model.GetNode().Title;
    ViewData["HasFooter"] = true;
    Model.BuildHeaderMenu();
    var dateTimeConverter = new GermanDateTimeConverter();
    var invoiceStatusConverter = new InvoiceStatusConverter();
}

@await Html.PartialAsync("_Header")

<section class="section">
    <div class="container">

        <div class="columns is-gapless is-mobile">
            <div class="column is-flex is-align-items-center">@Html.CreateBreadcrumb()</div>
            <div class="column is-narrow">
                <div class="dropdown is-hoverable is-right">
                    <div class="dropdown-trigger">
                        <button class="button" aria-haspopup="true" aria-controls="user-action">
                            <span class="icon is-small">
                                <i class="fa-solid fa-ellipsis-vertical"></i>
                            </span>
                        </button>
                    </div>
                    <div class="dropdown-menu" id="user-action" role="menu">
                        <div class="dropdown-content">
                            <div class="dropdown-item">
                                <div>Eingenommen: @Model.InvoicesPaidTotal.ToString("0.00") €</div>
                                <div>Offen: @Model.InvoicesOpenTotal.ToString("0.00") €</div>
                                <div>Gesamt: @Model.InvoicesTotal.ToString("0.00") €</div>
                            </div>
                            <hr class="dropdown-divider" />
                            <a href="@(Url.PageLink("CreateInvoice"))" class="dropdown-item">
                                @(Model.GetNode<CreateInvoiceModel>().Title)
                            </a>
                            <a class="dropdown-item call-url" href="#"
                                data-info="Offene Rechnungen wurden als bezahlt markiert."
                                data-url="@(Url.PageLink(string.Empty, "statuspaidall", new { id = Model.FilterPeriodId }))">
                                Offene Rechnungen als bezahlt markieren
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="columns is-variable is-1">
            <div class="column is-narrow">
                <div id="filterByDate" class="select">
                    <select asp-items="Model.FilterItems"></select>
                </div>
            </div>
        </div>

        <div class="table-container">
            <table class="table is-striped is-hoverable is-fullwidth">
                <thead>
                    <tr>
                        <th>Angelegt am</th>
                        <th>Empfänger</th>
                        <th>Summe</th>
                        <th>Status</th>
                        <th>Aktion</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Invoices.Length < 1)
                    {
                        <tr>
                            <td colspan="7"><div class="has-text-centered">Keine Rechnungen vorhanden.</div></td>
                        </tr>
                    }
                    @foreach (var i in Model.Invoices)
                    {
                        <tr>
                            <td>@dateTimeConverter.ToDateTime(i.CreatedOn)</td>
                            <td>@i.User</td>
                            <td>@i.Total.ToString("0.00") €</td>
                            <td>
                                @invoiceStatusConverter.StatusToString(i)
                            </td>
                            <td>
                            @if (i.Status == InvoiceStatus.Open)
                            {
                                <a href="#" class="call-url"
                                   data-info="Rechnung (@i.Total.ToString("0.00") €) für @i.User ist bezahlt."
                                   data-url="@(Url.PageLink(string.Empty, "statuspaid", new { id = @i.Id }))">Als bezahlt markieren</a>
                            } 
                            else
                            {
                                <a href="#" class="call-url"
                                   data-info="Rechnung (@i.Total.ToString("0.00") €) für @i.User ist offen."
                                   data-url="@(Url.PageLink(string.Empty, "statusopen", new { id = @i.Id }))">Als offen markieren</a>
                            }
                        </td>
                        </tr>

                    }
                </tbody>
            </table>
        </div>

    </div>
</section>

@await Html.PartialAsync("_Footer")

@section Scripts 
{
    <script type="text/javascript">
        $(function () {

            $('#filterByDate').change(function() {
                const filter = $(this).find(':selected').val();
                const url = new URL(window.location.href);
                url.searchParams.set('filter', filter);
                window.location.href = url.href;
            });

            $('.call-url').click(function(e) {
                e.stopPropagation();
                e.preventDefault();
                const url = $(this).data('url');
                const info = $(this).data('info');
                $.post(url, {@Html.AjaxCsrfToken()}).done(function (data) {
                    if (data) {
                        createToast(info);
                        window.location.reload();
                    } else {
                        createToast('Status konnte nicht gesetzt werden.', 'is-danger');
                    }
                });
            });
        });
    </script>
}