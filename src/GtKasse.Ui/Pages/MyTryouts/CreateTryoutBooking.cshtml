@page
@model GtKasse.Ui.Pages.MyTryouts.CreateTryoutBookingModel
@{
    ViewData["Title"] = Model.GetNode().Title;
    ViewData["HasFooter"] = true;
    Model.BuildHeaderMenu();
    var dateConverter = new GermanDateTimeConverter();
    var indexUrl = Url.PageLink("Index");
}

@await Html.PartialAsync("_Header")

<section class="section">
    <div class="container">

        @Html.CreateBreadcrumb()

        <div class="list has-hoverable-list-items has-visible-pointer-controls">
            @if (Model.Items.Length < 1)
            {
                <div class="list-item">Keine Trainings vorhanden.</div>
            }
            @foreach (var i in Model.Items)
            {
                <div class="list-item">
                    <div class="list-item-image">
                        <i class="fa-solid fa-handshake fa-2x has-text-info"></i>
                    </div>
                    <div class="list-item-content">
                        <div class="list-item-title">@dateConverter.ToDateTime(i.Date)</div>
                        <div class="list-item-description">
                            @if (i.ContactEmail is not null)
                            {
                                <span class="tag is-rounded is-warning"><a href="mailto:@i.ContactEmail">@i.ContactName</a></span>
                            }
                            else
                            {
                                <span class="tag is-rounded is-warning">@i.ContactName</span>
                            }
                        </div>
                    </div>
                    <div class="list-item-controls">
                        <div class="buttons">
                            <a class="button is-dark is-inverted open-modal" href="#" data-target="#infoModal"
                               data-info='@Json.Serialize(new { date = dateConverter.ToDateTime(i.Date), contact = i.ContactName, contactemail = i.ContactEmail, description = i.Description })'>
                                <span class="icon"><i class="fas fa-info"></i></span>
                            </a>
                            @if (i.CanAccept)
                            {
                                <a class="button is-dark is-inverted open-modal" href="#" data-target="#createModal"
                                   data-info='@Json.Serialize(new { date = dateConverter.ToDateTime(i.Date), contact = i.ContactName })'
                                   data-url="@(Url.PageLink(string.Empty, "create", new { id = i.Id }))">
                                    <span class="icon"><i class="fas fa-check"></i></span>
                                </a>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>

    </div>
</section>

@Html.CreateModalTemplateStart("createModal", "Training buchen")
<div class="content">
    <div>Zeitpunkt: <span class="tryoutDate"></span></div>
    <div>Ansprechpartner: <span class="tag is-rounded is-warning tryoutContact"></span></div>
    <hr />
    <p>Andere Person anmelden (optional):</p>
    <input class="input" type="text" />
</div>
@Html.CreateModalTemplateEnd(true)

@Html.CreateModalTemplateStart("infoModal", "Über das Training")
<div class="content">
    <div>Zeitpunkt: <span class="tryoutDate"></span></div>
    <div>Ansprechpartner: <span class="tag is-rounded is-warning"><a href="#" class="tryoutContact"></a></span></div>
    <hr />
    <p class="tryoutDescription"></p>
</div>
@Html.CreateModalTemplateEnd(false)

@await Html.PartialAsync("_Footer")

@section Scripts {
    <script type="text/javascript">
        $(function () {

            handleModal({
                id: '#infoModal',
                init: {
                    datainfo: 'info',
                    action: function (target, data) {
                        const d = JSON.parse(data);
                        $(target).find('.tryoutDate').text(d.date);
                        $(target).find('.tryoutContact').attr('href', d.contactemail ? `mailto:${d.contactemail}` : '#').text(d.contact);
                        $(target).find('.tryoutDescription').html(d.description);
                    }
                }
            });

            handleModal({
                id: '#createModal',
                token: {@Html.AjaxCsrfToken()},
                init: {
                    datainfo: 'info',
                    action: function (target, data) {
                        const d = JSON.parse(data);
                        $(target).find(":text").val('');
                        $(target).find('.tryoutDate').text(d.date);
                        $(target).find('.tryoutContact').text(d.contact);
                    }
                },
                confirm: {
                    dataurl: 'url',
                    pre: function (target, url) {
                        const name = $(target).find(":text").val();
                        const url2 = new URL(url);
                        url2.searchParams.set('name', name);
                        return url2.href;
                    },
                    post: function (data) {
                        var result = true;
                        if (data == 'AlreadyBooked') {
                            createToast("Anmeldung nicht möglich. Die Person ist bereits angemeldet.", 'is-warning');
                            result = false;
                        } else if (data == 'MaxReached') {
                            createToast("Anmeldung nicht möglich. Die maximale Anzahl wurde erreicht.", 'is-warning');
                            result = false;
                        }
                        sleep(1000).then(() => window.location.replace('@indexUrl'));
                        return result;
                    },
                    toast: {
                        success: 'Anmeldung wurde durchgeführt.',
                        failed: 'Anmeldung konnte nicht durchgeführt werden.'
                    }
                }
            });
        });
    </script>
}