@page "/Foods/EditListItems/{id:guid}"
@model GtKasse.Ui.Pages.Foods.EditListItemsModel
@{
    ViewData["Title"] = Model.GetNode().Title;
    ViewData["HasFooter"] = true;
    Guid.TryParse(Request.RouteValues["id"] as string, out var foodListId);
    Model.BuildHeaderMenu(new { id = foodListId });
    var foodTypeConverter = new FoodTypeConverter();
}

@await Html.PartialAsync("_Header")

<section class="section">
    <div class="container">

        <div class="columns is-gapless is-mobile">
            <div class="column is-flex is-align-items-center">@Html.CreateBreadcrumb(new { id = foodListId }, new { id = foodListId })</div>
            <div class="column is-narrow">
                <div class="dropdown is-hoverable is-right">
                    <div class="dropdown-trigger">
                        <button class="button" aria-haspopup="true" aria-controls="user-action">
                            <span class="icon is-small">
                                <i class="fa-solid fa-ellipsis-vertical"></i>
                            </span>
                        </button>
                    </div>
                    <div class="dropdown-menu" id="user-action" role="menu">
                        <div class="dropdown-content">
                            <a href="@(Url.PageLink("CreateListItem", null, new { id = foodListId } ))" class="dropdown-item">
                                @(Model.GetNode<CreateListItemModel>().Title)
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <h4 class="title is-4">Bezug: @Model.ListDetails</h4>

        @if (!ModelState.IsValid)
        {
            <div class="notification is-danger">
                <button class="delete"></button>
                <div asp-validation-summary="All"></div>
            </div>
        }

        <div class="table-container">
            <table class="table is-striped is-hoverable is-fullwidth">
                <thead>
                    <tr>
                        <th>Typ</th>
                        <th>Name</th>
                        <th>Preis</th>
                        <th>Aktion</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Foods.Length < 1)
                    {
                        <tr>
                            <td colspan="4"><div class="has-text-centered">Keine Einträge vorhanden.</div></td>
                        </tr>
                    }
                    @foreach(var i in Model.Foods)
                    {
                        <tr>
                            <td>@foodTypeConverter.TypeToString(i.Type)</td>
                            <td>@i.Name</td>
                            <td>@i.Price.ToString("0.00") €</td>
                            <td>
                                <a class="open-modal" href="#"
                                    data-target="#deleteItemModal"
                                    data-item="@i.Name für @i.Price.ToString("0.00") €"
                                    data-url="@(Url.PageLink(string.Empty, "delete", new { foodId = @i.Id }))">Löschen</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
       
    </div>
</section>

@await Html.PartialAsync("_Footer")

@Html.CreateModalTemplateWithOkCancel(
    "deleteItemModal",
    "Eintrag löschen?",
    @"Möchtest du wirklich den Eintrag ""<span class=""modal-item""></span>"" löschen?")

@section Scripts 
{
    <script type="text/javascript">
        $(function () {

            handleModal({
                id: '#deleteItemModal',
                token: {@Html.AjaxCsrfToken()},
                init: {
                    datainfo: 'item',
                    action: function(target, data) {
                        $(target).find('.modal-item').text(data);
                    }
                },
                confirm: {
                    dataurl: 'url',
                    post: function () {
                        sleep(1000).then(() => window.location.reload());
                        return true;
                    },
                    toast: {
                        success: 'Eintrag wurde gelöscht.',
                        failed: 'Eintrag konnte nicht gelöscht werden.'
                    }
                }
            });
        });
    </script>
}